[{"C:\\Users\\zaryab\\Desktop\\inventory\\ReactProjects-main\\productInventory\\src\\index.js":"1","C:\\Users\\zaryab\\Desktop\\inventory\\ReactProjects-main\\productInventory\\src\\App.js":"2","C:\\Users\\zaryab\\Desktop\\inventory\\ReactProjects-main\\productInventory\\src\\reportWebVitals.js":"3","C:\\Users\\zaryab\\Desktop\\inventory\\ReactProjects-main\\productInventory\\src\\components\\classComponent.js":"4","C:\\Users\\zaryab\\Desktop\\inventory\\ReactProjects-main\\productInventory\\src\\components\\funcComponent.js":"5"},{"size":500,"mtime":1608492817000,"results":"6","hashOfConfig":"7"},{"size":810,"mtime":1623395204151,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608492817000,"results":"9","hashOfConfig":"7"},{"size":4268,"mtime":1623396891463,"results":"10","hashOfConfig":"7"},{"size":3700,"mtime":1623392185585,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"re4d08",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\zaryab\\Desktop\\inventory\\ReactProjects-main\\productInventory\\src\\index.js",[],["24","25"],"C:\\Users\\zaryab\\Desktop\\inventory\\ReactProjects-main\\productInventory\\src\\App.js",[],"C:\\Users\\zaryab\\Desktop\\inventory\\ReactProjects-main\\productInventory\\src\\reportWebVitals.js",[],"C:\\Users\\zaryab\\Desktop\\inventory\\ReactProjects-main\\productInventory\\src\\components\\classComponent.js",["26","27"],"C:\\Users\\zaryab\\Desktop\\inventory\\ReactProjects-main\\productInventory\\src\\components\\funcComponent.js",["28","29","30","31","32","33"],"import { Form, Button, Table } from \"react-bootstrap\";\nimport { useState, createRef } from 'react';\n\nexport default function AddProduct() {\n    // typeOfData [stateData, stateUpdateFunction] = useState(initialData)\n    let initialValue = [];\n    const [products, setProduct] = useState(initialValue);\n    const formData = createRef();\n    // addproduct handler method\n    const add = (event)=>{\n        event.preventDefault();\n        //console.log(event.target.product_name.value);\n        // const formData = event.target;\n        // const newProduct = {\n        //     product_name: formData.product_name.value,\n        //     price: formData.price.value,\n        //     qty: formData.qty.value\n        // }\n        //console.log(formData.current)\n        const newProduct = {\n            product_name: formData.current.product_name.value,\n            price: formData.current.price.value,\n            qty: Number(formData.current.qty.value)\n        }\n        //console.log(newProduct);\n        // add a new product inside products array\n        setProduct([...products,newProduct]);\n        //console.log(products);\n    }\n    // increment qty value by 1\n    const increQty = (event)=>{\n        //console.log(event.target.value)\n        const indexOfArray = event.target.value;\n        products[indexOfArray].qty = products[indexOfArray].qty + 1;\n        setProduct([...products])\n    }\n    // decrement qty value by 1\n    const decreQty = (event)=>{\n        const indexOfArray = event.target.value;\n        products[indexOfArray].qty = products[indexOfArray].qty - 1;\n        setProduct([...products])\n    }\n    return (\n        \" \"\n        /*\n        <div>\n            <Form onSubmit={add} ref={formData}>\n            <Form.Group controlId=\"formBasicProductName\">\n                <Form.Label>Product Name:</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter Product Name\" name=\"product_name\"/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPrice\">\n                <Form.Label>Price:</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"Price in Euro\" name=\"price\"/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicQty\">\n                <Form.Label>Quantity:</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"How many: qty\" name=\"qty\"/>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n                Add to Inventory\n            </Button>\n            </Form>\n            <Table striped bordered hover variant=\"dark\">\n            <thead>\n                <tr>\n                    <th>Index</th>\n                    <th>Product Name:</th>\n                    <th>Price</th>\n                    <th>Qty</th>\n                    <th>Options</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    products.map((item, index)=>{\n                        return(\n                            <tr key={index}>\n                                <td>{index}</td>\n                                <td>{item.product_name}</td>\n                                <td>{item.price}</td>\n                                <td>{item.qty}</td>\n                                <td>\n                                    <Button variant=\"success\" onClick={event=>increQty(event)} value={index}>+</Button>\n                                    <Button variant=\"danger\" onClick={event => decreQty(event)} value={index}>-</Button>\n                                </td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n            </Table>\n        </div>\n        */\n    )\n}",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":42,"column":9,"nodeType":"40","messageId":"41","endLine":42,"endColumn":42},{"ruleId":"38","severity":1,"message":"39","line":50,"column":9,"nodeType":"40","messageId":"41","endLine":50,"endColumn":42},{"ruleId":"42","severity":1,"message":"43","line":1,"column":10,"nodeType":"44","messageId":"45","endLine":1,"endColumn":14},{"ruleId":"42","severity":1,"message":"46","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":22},{"ruleId":"42","severity":1,"message":"47","line":1,"column":24,"nodeType":"44","messageId":"45","endLine":1,"endColumn":29},{"ruleId":"42","severity":1,"message":"48","line":10,"column":11,"nodeType":"44","messageId":"45","endLine":10,"endColumn":14},{"ruleId":"42","severity":1,"message":"49","line":31,"column":11,"nodeType":"44","messageId":"45","endLine":31,"endColumn":19},{"ruleId":"42","severity":1,"message":"50","line":38,"column":11,"nodeType":"44","messageId":"45","endLine":38,"endColumn":19},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Table' is defined but never used.","'add' is assigned a value but never used.","'increQty' is assigned a value but never used.","'decreQty' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]